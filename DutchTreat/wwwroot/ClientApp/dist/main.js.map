{"version":3,"sources":["webpack:///./ClientApp/$_lazy_route_resource lazy namespace object","webpack:///./ClientApp/app/app.component.html","webpack:///./ClientApp/app/app.component.ts","webpack:///./ClientApp/app/app.module.ts","webpack:///./ClientApp/app/checkout/checkout.component.css","webpack:///./ClientApp/app/checkout/checkout.component.html","webpack:///./ClientApp/app/checkout/checkout.component.ts","webpack:///./ClientApp/app/login/login.component.html","webpack:///./ClientApp/app/login/login.component.ts","webpack:///./ClientApp/app/shared/dataService.ts","webpack:///./ClientApp/app/shared/order.ts","webpack:///./ClientApp/app/shop/cart.component.html","webpack:///./ClientApp/app/shop/cart.component.ts","webpack:///./ClientApp/app/shop/productList.component.css","webpack:///./ClientApp/app/shop/productList.component.html","webpack:///./ClientApp/app/shop/productList.component.ts","webpack:///./ClientApp/app/shop/shop.component.html","webpack:///./ClientApp/app/shop/shop.component.ts","webpack:///./ClientApp/environments/environment.ts","webpack:///./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./ClientApp/$$_lazy_route_resource lazy recursive\";","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: \"./app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  title = 'product list';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule, HttpHeaders } from \"@angular/common/http\";\nimport { AppComponent } from './app.component';\nimport { ProductList } from \"./shop/productList.component\";\nimport { Cart } from \"./shop/cart.component\";\nimport { Shop } from \"./shop/shop.component\";\nimport { Checkout } from \"./checkout/checkout.component\";\nimport { Login } from \"./login/login.component\";\n\nimport { DataService } from \"./shared/dataService\";\n\nimport { RouterModule } from \"@angular/router\";\nimport { FormsModule } from \"@angular/forms\";\n\nlet routes = [\n    { path: \"\", component: Shop },\n    { path: \"checkout\", component: Checkout },\n    { path: \"login\", component: Login }\n];\n\n@NgModule({\n  declarations: [\n      AppComponent,\n      ProductList,\n      Cart,\n      Shop,\n      Checkout,\n      Login\n  ],\n  imports: [\n      BrowserModule,\n      HttpModule,\n      HttpClientModule,\n      FormsModule,\n      RouterModule.forRoot(routes,\n          {\n              useHash: true,\n              enableTracing: false //for Debugginf of the Routes\n          })\n  ],\n    providers: [\n        DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".checkout-thumb {\\n  max-width: 100px;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\">\\n    <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-warning\\\">{{ errorMessage }}</div>\\n    <h3>Confirm Order</h3>\\n    <table class=\\\"table table-bordered table-hover\\\">\\n        <tr *ngFor=\\\"let o of data.order.items\\\">\\n            <td>\\n                <img src=\\\"/img/{{ o.productArtId }}.jpg\\\" alt=\\\"o.productTitle\\\" class=\\\"img-thumbnail checkout-thumb\\\" /></td>\\n            <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\\n            <td>{{ o.quantity }}</td>\\n            <td>{{ o.unitPrice|currency:'USD':true }}</td>\\n            <td>{{ (o.unitPrice * o.quantity)|currency:'USD':true }}</td>\\n        </tr>\\n    </table>\\n    <div class=\\\"col-md-4 col-md-offset-8 text-right\\\">\\n        <table class=\\\"table table-condensed\\\">\\n            <tr>\\n                <td class=\\\"text-right\\\">Subtotal</td>\\n                <td class=\\\"text-right\\\">{{ data.order.subtotal|currency:'USD':true }}</td>\\n            </tr>\\n            <tr>\\n                <td class=\\\"text-right\\\">Shipping</td>\\n                <td class=\\\"text-right\\\">$ 0.00</td>\\n            </tr>\\n            <tr>\\n                <td class=\\\"text-right\\\">Total:</td>\\n                <td class=\\\"text-right\\\">{{ data.order.subtotal|currency:'USD':true }}</td>\\n            </tr>\\n        </table>\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"onCheckout()\\\">Complete Purchase</button>\\n        <a routerLink=\\\"/\\\" class=\\\"btn btn-info\\\">Cancel</a>\\n    </div>\\n\\n</div>\"","﻿import { Component } from \"@angular/core\";\nimport { DataService } from '../shared/dataService';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"checkout\",\n  templateUrl: \"checkout.component.html\",\n  styleUrls: ['checkout.component.css']\n})\nexport class Checkout {\n\n  constructor(public data: DataService, public router: Router) {\n  }\n    errorMessage: string = \"\";\n\n    onCheckout() {\n        this.data.checkout().subscribe(success => {\n                if (success) {\n                    this.router.navigate([\"/\"]);\n                }\n            },\n            err => this.errorMessage = \"failed to save oreder\");\n    }\n}","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-4 col-md-offset-4\\\">\\n        <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-warning\\\">{{ errorMessage }} </div>\\n        <form (submit)=\\\"onLogin()\\\" #theForm=\\\"ngForm\\\" novalidate=\\\"\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"username\\\">Username</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"creds.username\\\" #username=\\\"ngModel\\\"required=\\\"\\\" />\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"username.touched && username.invalid && username.errors.required\\\">Username is required</div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\">Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"creds.password\\\" #password=\\\"ngModel\\\"required=\\\"\\\" />\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"password.touched && password.invalid && password.errors.required\\\">Password is required</div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Login\\\" [disabled]=\\\"theForm.invalid\\\" />\\n                <a routerLink=\\\"/\\\" class=\\\"btn btn-default\\\">Cancel</a>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","﻿import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\n\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"login\",\r\n    templateUrl: \"login.component.html\"\r\n})\r\nexport class Login {\r\n    constructor(private data: DataService, private router: Router) { }\r\n\r\n    errorMessage: string =\"\";\r\n    public creds = {\r\n        username: \"\",\r\n        password: \"\"\r\n    };\r\n\r\n    onLogin() {\r\n        // Call the login Service\r\n        this.data.login(this.creds)\r\n            .subscribe(success => {\r\n                    if (success) {\r\n                        if (this.data.order.items.length == 0) {\r\n                            this.router.navigate([\"\"]);\r\n                        } else {\r\n                            this.router.navigate([\"checkout\"]);\r\n                        }\r\n                    }\r\n                },\r\n                err => this.errorMessage = \"Faield to login\");\r\n    }\r\n}","﻿import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions, HttpModule} from \"@angular/http\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Product } from \"./product\";\r\nimport { Order, OrderItem } from \"./order\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient){ }\r\n\r\n    private token: string = \"\";\r\n    private tokenExpiration: Date;\r\n\r\n    public order: Order = new Order();\r\n\r\n    public products: Product[] = [];\r\n\r\n    public loadProducts(): Observable<boolean> {\r\n        return this.http.get(\"/api/products\")\r\n            .pipe(map((data: any[]) => {\r\n                    this.products = data;\r\n                    return true;\r\n                }\r\n            ));\r\n    }\r\n\r\n    public get loginRequired(): boolean {\r\n        return this.token.length == 0 || this.tokenExpiration > new Date();\r\n    }\r\n\r\n    login(creds): Observable<boolean> {\r\n        return this.http\r\n            .post(\"/account/createtoken\", creds)\r\n            .pipe(map((data: any) => {\r\n                this.token = data.token;\r\n                this.tokenExpiration = data.expiration;\r\n                return true;\r\n            }));\r\n    }\r\n\r\n    public checkout() {\r\n        if (!this.order.orderNumber) {\r\n            this.order.orderNumber =\r\n                this.order.orderDate.getFullYear().toString() + this.order.orderDate.getTime().toString();\r\n        }\r\n        return this.http.post(\"/api/orders\",\r\n                this.order,\r\n                {\r\n                    headers: new HttpHeaders().set(\"Authorization\", \"Bearer \" + this.token)\r\n                })\r\n            .pipe(map(response => {\r\n                this.order = new Order();\r\n                return true;\r\n            }));\r\n    }\r\n\r\n\r\n    public AddToOrder(product: Product) {\r\n\r\n        let item: OrderItem = this.order.items.find(i => i.productId == product.id);\r\n\r\n        if (item) {\r\n\r\n            item.quantity++;\r\n\r\n        } else {\r\n            item = new OrderItem();\r\n            item.productId = product.id;\r\n            item.productArtId = product.artId;\r\n            item.productArtist = product.artist;\r\n            item.productCategory = product.category;\r\n            item.productSize = product.size;\r\n            item.productTitle = product.title;\r\n            item.unitPrice = product.price;\r\n            item.quantity = 1;\r\n\r\n            this.order.items.push(item);\r\n        }\r\n    }\r\n}","﻿import * as _ from \"lodash\";\r\n\r\nexport class Order { \r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string;\r\n    items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n    get subtotal(): number {\r\n        return _.sum(_.map(this.items, i=>i.unitPrice * i.quantity));\r\n    };\r\n}\r\n\r\nexport class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productSize: string;\r\n    productTitle: string;\r\n    productArtist: string;\r\n    productArtId: string;\r\n}","module.exports = \"<h3>Shopping Cart</h3>\\r\\n<div>#/Items: {{data.order.items.length}}</div>\\r\\n<div>Subtotal: {{data.order.subtotal | currency:\\\"EUR\\\":true}} </div>\\r\\n<table class=\\\"table table-condensed table-hover\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n        <td>Product</td>\\r\\n        <td>#</td>\\r\\n        <td>€</td>\\r\\n        <td>Total</td>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let o of data.order.items\\\">\\r\\n        <td>{{ o.productCategory }} - {{ o.productTitle }}</td>\\r\\n        <td>{{ o.quantity }}</td>\\r\\n        <td>{{ o.unitPrice | currency:\\\"EUR\\\":true}}</td>\\r\\n        <td>{{ (o.unitPrice * o.quantity) | currency:\\\"EUR\\\":true}}</td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n<button routerLink=\\\"checkout\\\" class=\\\"btn btn-success\\\" *ngIf=\\\"data.order.items.length > 0\\\" (click)=\\\"onCheckout()\\\">Checkout</button>\"","﻿import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"the-cart\",\r\n    templateUrl: \"cart.component.html\",\r\n    styleUrls:[]\r\n})\r\nexport class Cart {\r\n\r\n    constructor(private data: DataService, private router: Router) { }\r\n\r\n    onCheckout() {\r\n        if (this.data.loginRequired) {\r\n            // Force Login\r\n            this.router.navigate([\"login\"]);\r\n        } else {\r\n            // Go to checkout\r\n            this.router.navigate([\"checkout\"]);\r\n        }\r\n    }\r\n\r\n}","module.exports = \".product-info img {\\r\\n    max-width: 100px;\\r\\n    float: left;\\r\\n    margin: 0 2px;\\r\\n    border: solid 1px black;\\r\\n}\\r\\n\\r\\n.product-info .product-name {\\r\\n    font-size: large;\\r\\n    font-weight: bold;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"product-info col-md-4\\\" *ngFor=\\\"let p of products\\\">\\r\\n        <div class=\\\"well well-sm\\\"> \\r\\n            <img src=\\\"/img/{{ p.artId }}.jpg\\\" class=\\\"img-responsive\\\" [alt]=\\\"p.title\\\" />\\r\\n            <div class=\\\"product-name\\\">{{p.category}} - {{p.size}}</div>\\r\\n                <div><strong>Price:</strong> {{ p.price | currency:\\\"EUR\\\":true}}</div>\\r\\n                <div><strong>Artist:</strong> {{p.artist}}</div>\\r\\n                <div><strong>Title: </strong> {{p.title}}</div>\\r\\n                <div><strong>Description: </strong> {{p.artDescription }}</div>\\r\\n            <button id=\\\"buyButton\\\" class=\\\"btn btn-success\\\" (click)=\\\"addProduct(p)\\\">Buy</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\"","﻿import {Component, OnInit} from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Product } from \"../shared/product\";\r\n\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: \"productList.component.html\",\r\n    styleUrls: [ \"productList.component.css\" ]\r\n})\r\nexport class ProductList implements OnInit{\r\n    public products: Product[] = [];\r\n\r\n\r\n    constructor(private data: DataService) {\r\n        this.products = data.products;\r\n    }\r\n    \r\n    ngOnInit() {\r\n        this.data.loadProducts()\r\n            .subscribe(() => this.products = this.data.products);\r\n    }\r\n\r\n    addProduct(product: Product) {\r\n        this.data.AddToOrder(product);\r\n    }\r\n}","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-9\\\">\\r\\n        <h3>{{ title}}</h3>\\r\\n        <product-list></product-list>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n        <div class=\\\"well well-sm\\\">\\r\\n            <the-cart></the-cart>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","﻿import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"the-shop\",\r\n    templateUrl: \"shop.component.html\"\r\n})\r\nexport class Shop {\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}